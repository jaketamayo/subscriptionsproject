{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, withModifiers as _withModifiers, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"row justify-content-center\"\n};\nconst _hoisted_3 = {\n  class: \"col-md-5\"\n};\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Navbar = _resolveComponent(\"Navbar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Navbar), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[12] || (_cache[12] = _createElementVNode(\"h3\", {\n    class: \"text-center\"\n  }, \"Update Subscription\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[6] || (_cache[6] = _withModifiers((...args) => $options.onUpdateForm && $options.onUpdateForm(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_4, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", null, \"Name\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.subscription.name = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.subscription.name]])]), _createElementVNode(\"div\", _hoisted_5, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", null, \"Description\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.subscription.description = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.subscription.description]])]), _createElementVNode(\"div\", _hoisted_6, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", null, \"Amount\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.subscription.amount = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.subscription.amount]])]), _createElementVNode(\"div\", _hoisted_7, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", null, \"Payment Frequency\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    id: \"frequency\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.subscription.frequency = $event),\n    required: \"\"\n  }, _cache[10] || (_cache[10] = [_createStaticVNode(\"<option value=\\\"weekly\\\">Weekly</option><option value=\\\"bimonthly\\\">Bi-monthly</option><option value=\\\"monthly\\\">Monthly</option><option value=\\\"quarterly\\\">Quarterly</option><option value=\\\"biannually\\\">Bi-annually</option><option value=\\\"annually\\\">Annually</option>\", 6)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.subscription.frequency]])]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n    class: \"btn btn-primary btn-block\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.updateSubscription && $options.updateSubscription(...args))\n  }, \"Update Subscription\"), _createElementVNode(\"button\", {\n    class: \"btn btn-primary col-4\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.cancelOperation && $options.cancelOperation(...args))\n  }, \"Cancel\")])], 32 /* NEED_HYDRATION */)])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_Navbar","_createElementVNode","_hoisted_2","_hoisted_3","onSubmit","_cache","_withModifiers","args","$options","onUpdateForm","_hoisted_4","type","$event","$data","subscription","name","required","_hoisted_5","description","_hoisted_6","amount","_hoisted_7","id","frequency","_createStaticVNode","_hoisted_8","onClick","updateSubscription","cancelOperation"],"sources":["/Users/tomatosauce/Desktop/activity-4-firebase-jaketamayo/subscriptions/src/components/Edit.vue"],"sourcesContent":["<template>\n    <div class=\"app\">\n        <Navbar />\n        <div class=\"row justify-content-center\">\n            <div class=\"col-md-5\">\n                <h3 class=\"text-center\">Update Subscription</h3>\n                <form @submit.prevent=\"onUpdateForm\">\n                    <div class=\"form-group\">\n                        <label>Name</label>\n                        <input type=\"text\" class=\"form-control\" v-model=\"subscription.name\" required />\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label>Description</label>\n                        <input type=\"text\" class=\"form-control\" v-model=\"subscription.description\" required />\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label>Amount</label>\n                        <input type=\"text\" class=\"form-control\" v-model=\"subscription.amount\" required />\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label>Payment Frequency</label>\n                        <select id=\"frequency\" class=\"form-control\" v-model=\"subscription.frequency\" required>\n                            <option value=\"weekly\">Weekly</option>\n                            <option value=\"bimonthly\">Bi-monthly</option>\n                            <option value=\"monthly\">Monthly</option>\n                            <option value=\"quarterly\">Quarterly</option>\n                            <option value=\"biannually\">Bi-annually</option>\n                            <option value=\"annually\">Annually</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <button class=\"btn btn-primary btn-block\" @click=\"updateSubscription\">Update\n                            Subscription</button>\n                        <button class=\"btn btn-primary col-4\" @click=\"cancelOperation\">Cancel</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport db from '../firebaseDB';\nimport Navbar from '../components/Navbar.vue';\n\nexport default {\n    name: 'Edit',\n    components: {\n        Navbar,\n    },\n    data() {\n        return {\n            subscription: {},\n        };\n    },\n    created() {\n        let dbRef = db.collection('subscriptions').doc(this.$route.params.id);\n        dbRef.get()\n            .then((doc) => {\n                this.subscription = doc.data();\n            })\n            .catch((error) => {\n                console.log(error);\n                alert('Error accessing database');\n                this.$router.push('/');\n            });\n    },\n    methods: {\n        onUpdateForm(event) {\n            event.preventDefault();\n            this.updateSubscription();\n        },\n        cancelOperation() {\n            this.$router.push('/subscriptionsList');\n        },\n        updateSubscription() {\n            db.collection('subscriptions').doc(this.$route.params.id)\n                .update(this.subscription)\n                .then(() => {\n                    this.$router.push('/subscriptionsList');\n                })\n                .catch((error) => {\n                    console.log(error);\n                    alert('Error updating subscription');\n                    this.$router.push('/subscriptionsList');\n                });\n        },\n    },\n};\n</script>\n"],"mappings":";;EACSA,KAAK,EAAC;AAAK;;EAEPA,KAAK,EAAC;AAA4B;;EAC9BA,KAAK,EAAC;AAAU;;EAGRA,KAAK,EAAC;AAAY;;EAKlBA,KAAK,EAAC;AAAY;;EAKlBA,KAAK,EAAC;AAAY;;EAKlBA,KAAK,EAAC;AAAY;;EAWlBA,KAAK,EAAC;AAAY;;;uBAhCvCC,mBAAA,CAwCM,OAxCNC,UAwCM,GAvCFC,YAAA,CAAUC,iBAAA,GACVC,mBAAA,CAqCM,OArCNC,UAqCM,GApCFD,mBAAA,CAmCM,OAnCNE,UAmCM,G,4BAlCFF,mBAAA,CAAgD;IAA5CL,KAAK,EAAC;EAAa,GAAC,qBAAmB,sBAC3CK,mBAAA,CAgCO;IAhCAG,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAN7BC,cAAA,KAAAC,IAAA,KAMuCC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;MAC/BN,mBAAA,CAGM,OAHNS,UAGM,G,0BAFFT,mBAAA,CAAmB,eAAZ,MAAI,sB,gBACXA,mBAAA,CAA+E;IAAxEU,IAAI,EAAC,MAAM;IAACf,KAAK,EAAC,cAAc;IAT/D,uBAAAS,MAAA,QAAAA,MAAA,MAAAO,MAAA,IASyEC,KAAA,CAAAC,YAAY,CAACC,IAAI,GAAAH,MAAA;IAAEI,QAAQ,EAAR;iDAAnBH,KAAA,CAAAC,YAAY,CAACC,IAAI,E,KAGtEd,mBAAA,CAGM,OAHNgB,UAGM,G,0BAFFhB,mBAAA,CAA0B,eAAnB,aAAW,sB,gBAClBA,mBAAA,CAAsF;IAA/EU,IAAI,EAAC,MAAM;IAACf,KAAK,EAAC,cAAc;IAd/D,uBAAAS,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAcyEC,KAAA,CAAAC,YAAY,CAACI,WAAW,GAAAN,MAAA;IAAEI,QAAQ,EAAR;iDAA1BH,KAAA,CAAAC,YAAY,CAACI,WAAW,E,KAG7EjB,mBAAA,CAGM,OAHNkB,UAGM,G,0BAFFlB,mBAAA,CAAqB,eAAd,QAAM,sB,gBACbA,mBAAA,CAAiF;IAA1EU,IAAI,EAAC,MAAM;IAACf,KAAK,EAAC,cAAc;IAnB/D,uBAAAS,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAmByEC,KAAA,CAAAC,YAAY,CAACM,MAAM,GAAAR,MAAA;IAAEI,QAAQ,EAAR;iDAArBH,KAAA,CAAAC,YAAY,CAACM,MAAM,E,KAGxEnB,mBAAA,CAUM,OAVNoB,UAUM,G,4BATFpB,mBAAA,CAAgC,eAAzB,mBAAiB,sB,gBACxBA,mBAAA,CAOS;IAPDqB,EAAE,EAAC,WAAW;IAAC1B,KAAK,EAAC,cAAc;IAxBnE,uBAAAS,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAwB6EC,KAAA,CAAAC,YAAY,CAACS,SAAS,GAAAX,MAAA;IAAEI,QAAQ,EAAR;kCAxBrGQ,kBAAA,oR,2CAwB6EX,KAAA,CAAAC,YAAY,CAACS,SAAS,E,KAS/EtB,mBAAA,CAIM,OAJNwB,UAIM,GAHFxB,mBAAA,CACyB;IADjBL,KAAK,EAAC,2BAA2B;IAAE8B,OAAK,EAAArB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAmB,kBAAA,IAAAnB,QAAA,CAAAmB,kBAAA,IAAApB,IAAA,CAAkB;KAAE,qBACtD,GAChBN,mBAAA,CAA8E;IAAtEL,KAAK,EAAC,uBAAuB;IAAE8B,OAAK,EAAArB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAoB,eAAA,IAAApB,QAAA,CAAAoB,eAAA,IAAArB,IAAA,CAAe;KAAE,QAAM,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}