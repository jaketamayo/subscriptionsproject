{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport db from '../firebaseDB';\nimport Navbar from './Navbar.vue';\nexport default {\n  name: \"List-vue\",\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      Subscriptions: []\n    };\n  },\n  created() {\n    db.collection('subscriptions').onSnapshot(snapshotChange => {\n      this.Subscriptions = [];\n      snapshotChange.forEach(doc => {\n        if (doc.data().name) {\n          this.Subscriptions.push({\n            key: doc.id,\n            name: doc.data().name,\n            description: doc.data().description,\n            amount: doc.data().amount,\n            frequency: doc.data().frequency\n          });\n        }\n      });\n    });\n  },\n  methods: {\n    deleteSubscription(id) {\n      if (window.confirm('Do you really want to delete?')) {\n        db.collection('subscriptions').doc(id).delete().then(() => {}).catch(error => {\n          console.error(error);\n        });\n      }\n    },\n    createSubscription() {\n      this.$router.push('/create');\n    }\n  }\n};","map":{"version":3,"names":["db","Navbar","name","components","data","Subscriptions","created","collection","onSnapshot","snapshotChange","forEach","doc","push","key","id","description","amount","frequency","methods","deleteSubscription","window","confirm","delete","then","catch","error","console","createSubscription","$router"],"sources":["/Users/tomatosauce/Desktop/activity-4-firebase-jaketamayo/subscriptions/src/components/SubscriptionsList.vue"],"sourcesContent":["<template>\n    <div class=\"app\">\n        <Navbar />\n        <div class=\"list-container\">\n            <div class=\"row justify-content-center\">\n                <div class=\"col-md-8\">\n                    <h3 class=\"text-center\">Subscriptions List</h3>\n                    <table class=\"table table-striped align-middle\">\n                        <thead>\n                            <tr>\n                                <th>Subscription</th>\n                                <th class=\"d-none d-sm-table-cell\">Description</th>\n                                <th>Amount</th>\n                                <th>Frequency</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr v-for=\"subscription in Subscriptions\" :key=\"subscription.key\">\n                                <td>{{ subscription.name }}</td>\n                                <td class=\"d-none d-sm-table-cell\">{{ subscription.description }}</td>\n                                <td>${{ subscription.amount }}</td>\n                                <td>{{ subscription.frequency }}</td>\n                                <td>\n                                    <router-link :to=\"{ name: 'edit', params: { id: subscription.key } }\"\n                                        class=\"btn btn-primary btn-sm\">\n                                        Edit\n                                    </router-link>\n                                    <button @click.prevent=\"deleteSubscription(subscription.key)\"\n                                        class=\"btn btn-danger btn-sm\">\n                                        Delete\n                                    </button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <button @click=\"createSubscription\" class=\"btn btn-success btn-add mt-3\">\n                        Add New Subscription\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport db from '../firebaseDB';\nimport Navbar from './Navbar.vue';\n\nexport default {\n    name: \"List-vue\",\n    components: {\n        Navbar\n    },\n    data() {\n        return {\n            Subscriptions: [],\n        };\n    },\n    created() {\n        db.collection('subscriptions').onSnapshot((snapshotChange) => {\n            this.Subscriptions = [];\n            snapshotChange.forEach((doc) => {\n                if (doc.data().name) {\n                    this.Subscriptions.push({\n                        key: doc.id,\n                        name: doc.data().name,\n                        description: doc.data().description,\n                        amount: doc.data().amount,\n                        frequency: doc.data().frequency,\n                    });\n                }\n            });\n        });\n    },\n    methods: {\n        deleteSubscription(id) {\n            if (window.confirm('Do you really want to delete?')) {\n                db.collection('subscriptions').doc(id).delete()\n                    .then(() => { })\n                    .catch((error) => {\n                        console.error(error);\n                    });\n            }\n        },\n        createSubscription() {\n            this.$router.push('/create');\n        },\n    },\n};\n</script>\n\n<style scoped>\n.app {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.list-container {\n    margin-top: 50px;\n    padding: 20px;\n    background-color: #f9f9f9;\n    border-radius: 8px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    max-width: 800px;\n    width: 100%;\n}\n\nh3 {\n    color: #2C3D4E;\n    margin-bottom: 20px;\n}\n\n.table {\n    width: 100%;\n    margin-top: 15px;\n    border-collapse: separate;\n    border-spacing: 0;\n}\n\n.table thead {\n    background-color: #42B883;\n    color: #fff;\n}\n\n.table th,\n.table td {\n    padding: 15px;\n    border-bottom: 1px solid #ddd;\n    text-align: center;\n}\n\n.table tbody tr:hover {\n    background-color: #f2f2f2;\n}\n\n.btn {\n    padding: 8px 12px;\n    font-size: 14px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n}\n\n.btn-primary {\n    background-color: #007bff;\n    color: #fff;\n}\n\n.btn-primary:hover {\n    background-color: #0056b3;\n}\n\n.btn-danger {\n    background-color: #dc3545;\n    color: #fff;\n}\n\n.btn-danger:hover {\n    background-color: #b02a37;\n}\n\n.btn-success {\n    background-color: #28a745;\n    color: #fff;\n}\n\n.btn-success:hover {\n    background-color: #218838;\n}\n\n.btn-add {\n    display: block;\n    margin: 20px auto;\n    width: auto;\n    padding: 10px 20px;\n}\n</style>\n\n\n"],"mappings":";;;AA8CA,OAAOA,EAAC,MAAO,eAAe;AAC9B,OAAOC,MAAK,MAAO,cAAc;AAEjC,eAAe;EACXC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACRF;EACJ,CAAC;EACDG,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,aAAa,EAAE;IACnB,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG;IACNN,EAAE,CAACO,UAAU,CAAC,eAAe,CAAC,CAACC,UAAU,CAAEC,cAAc,IAAK;MAC1D,IAAI,CAACJ,aAAY,GAAI,EAAE;MACvBI,cAAc,CAACC,OAAO,CAAEC,GAAG,IAAK;QAC5B,IAAIA,GAAG,CAACP,IAAI,CAAC,CAAC,CAACF,IAAI,EAAE;UACjB,IAAI,CAACG,aAAa,CAACO,IAAI,CAAC;YACpBC,GAAG,EAAEF,GAAG,CAACG,EAAE;YACXZ,IAAI,EAAES,GAAG,CAACP,IAAI,CAAC,CAAC,CAACF,IAAI;YACrBa,WAAW,EAAEJ,GAAG,CAACP,IAAI,CAAC,CAAC,CAACW,WAAW;YACnCC,MAAM,EAAEL,GAAG,CAACP,IAAI,CAAC,CAAC,CAACY,MAAM;YACzBC,SAAS,EAAEN,GAAG,CAACP,IAAI,CAAC,CAAC,CAACa;UAC1B,CAAC,CAAC;QACN;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACDC,OAAO,EAAE;IACLC,kBAAkBA,CAACL,EAAE,EAAE;MACnB,IAAIM,MAAM,CAACC,OAAO,CAAC,+BAA+B,CAAC,EAAE;QACjDrB,EAAE,CAACO,UAAU,CAAC,eAAe,CAAC,CAACI,GAAG,CAACG,EAAE,CAAC,CAACQ,MAAM,CAAC,EACzCC,IAAI,CAAC,MAAM,CAAE,CAAC,EACdC,KAAK,CAAEC,KAAK,IAAK;UACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACxB,CAAC,CAAC;MACV;IACJ,CAAC;IACDE,kBAAkBA,CAAA,EAAG;MACjB,IAAI,CAACC,OAAO,CAAChB,IAAI,CAAC,SAAS,CAAC;IAChC;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}