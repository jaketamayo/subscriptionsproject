{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport db from '../firebaseDB';\nimport Navbar from '../components/Navbar.vue';\nexport default {\n  name: 'Edit',\n  components: {\n    Navbar\n  },\n  data() {\n    return {\n      subscription: {}\n    };\n  },\n  created() {\n    let dbRef = db.collection('subscriptions').doc(this.$route.params.id);\n    dbRef.get().then(doc => {\n      this.subscription = doc.data();\n    }).catch(error => {\n      console.log(error);\n      alert('Error accessing database');\n      this.$router.push('/');\n    });\n  },\n  methods: {\n    onUpdateForm(event) {\n      event.preventDefault();\n      this.updateSubscription();\n    },\n    cancelOperation() {\n      this.$router.push('/subscriptionsList');\n    },\n    updateSubscription() {\n      db.collection('subscriptions').doc(this.$route.params.id).update(this.subscription).then(() => {\n        this.$router.push('/subscriptionsList');\n      }).catch(error => {\n        console.log(error);\n        alert('Error updating subscription');\n        this.$router.push('/subscriptionsList');\n      });\n    }\n  }\n};","map":{"version":3,"names":["db","Navbar","name","components","data","subscription","created","dbRef","collection","doc","$route","params","id","get","then","catch","error","console","log","alert","$router","push","methods","onUpdateForm","event","preventDefault","updateSubscription","cancelOperation","update"],"sources":["/Users/tomatosauce/Desktop/activity-4-firebase-jaketamayo/subscriptions/src/components/Edit.vue"],"sourcesContent":["<template>\n    <div class=\"app\">\n        <Navbar />\n        <div class=\"row justify-content-center\">\n            <div class=\"col-md-5\">\n                <h3 class=\"text-center\">Update Subscription</h3>\n                <form @submit.prevent=\"onUpdateForm\">\n                    <div class=\"form-group\">\n                        <label>Name</label>\n                        <input type=\"text\" class=\"form-control\" v-model=\"subscription.name\" required />\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label>Description</label>\n                        <input type=\"text\" class=\"form-control\" v-model=\"subscription.description\" required />\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label>Amount</label>\n                        <input type=\"text\" class=\"form-control\" v-model=\"subscription.amount\" required />\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label>Payment Frequency</label>\n                        <select id=\"frequency\" class=\"form-control\" v-model=\"subscription.frequency\" required>\n                            <option value=\"weekly\">Weekly</option>\n                            <option value=\"bimonthly\">Bi-monthly</option>\n                            <option value=\"monthly\">Monthly</option>\n                            <option value=\"quarterly\">Quarterly</option>\n                            <option value=\"biannually\">Bi-annually</option>\n                            <option value=\"annually\">Annually</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <button class=\"btn btn-primary btn-block\" @click=\"updateSubscription\">Update\n                            Subscription</button>\n                        <button class=\"btn btn-primary col-4\" @click=\"cancelOperation\">Cancel</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport db from '../firebaseDB';\nimport Navbar from '../components/Navbar.vue';\n\nexport default {\n    name: 'Edit',\n    components: {\n        Navbar,\n    },\n    data() {\n        return {\n            subscription: {},\n        };\n    },\n    created() {\n        let dbRef = db.collection('subscriptions').doc(this.$route.params.id);\n        dbRef.get()\n            .then((doc) => {\n                this.subscription = doc.data();\n            })\n            .catch((error) => {\n                console.log(error);\n                alert('Error accessing database');\n                this.$router.push('/');\n            });\n    },\n    methods: {\n        onUpdateForm(event) {\n            event.preventDefault();\n            this.updateSubscription();\n        },\n        cancelOperation() {\n            this.$router.push('/subscriptionsList');\n        },\n        updateSubscription() {\n            db.collection('subscriptions').doc(this.$route.params.id)\n                .update(this.subscription)\n                .then(() => {\n                    this.$router.push('/subscriptionsList');\n                })\n                .catch((error) => {\n                    console.log(error);\n                    alert('Error updating subscription');\n                    this.$router.push('/subscriptionsList');\n                });\n        },\n    },\n};\n</script>\n"],"mappings":";AA6CA,OAAOA,EAAC,MAAO,eAAe;AAC9B,OAAOC,MAAK,MAAO,0BAA0B;AAE7C,eAAe;EACXC,IAAI,EAAE,MAAM;EACZC,UAAU,EAAE;IACRF;EACJ,CAAC;EACDG,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,YAAY,EAAE,CAAC;IACnB,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAIC,KAAI,GAAIP,EAAE,CAACQ,UAAU,CAAC,eAAe,CAAC,CAACC,GAAG,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,CAAC;IACrEL,KAAK,CAACM,GAAG,CAAC,EACLC,IAAI,CAAEL,GAAG,IAAK;MACX,IAAI,CAACJ,YAAW,GAAII,GAAG,CAACL,IAAI,CAAC,CAAC;IAClC,CAAC,EACAW,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClBG,KAAK,CAAC,0BAA0B,CAAC;MACjC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;IAC1B,CAAC,CAAC;EACV,CAAC;EACDC,OAAO,EAAE;IACLC,YAAYA,CAACC,KAAK,EAAE;MAChBA,KAAK,CAACC,cAAc,CAAC,CAAC;MACtB,IAAI,CAACC,kBAAkB,CAAC,CAAC;IAC7B,CAAC;IACDC,eAAeA,CAAA,EAAG;MACd,IAAI,CAACP,OAAO,CAACC,IAAI,CAAC,oBAAoB,CAAC;IAC3C,CAAC;IACDK,kBAAkBA,CAAA,EAAG;MACjB1B,EAAE,CAACQ,UAAU,CAAC,eAAe,CAAC,CAACC,GAAG,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,EACnDgB,MAAM,CAAC,IAAI,CAACvB,YAAY,EACxBS,IAAI,CAAC,MAAM;QACR,IAAI,CAACM,OAAO,CAACC,IAAI,CAAC,oBAAoB,CAAC;MAC3C,CAAC,EACAN,KAAK,CAAEC,KAAK,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAClBG,KAAK,CAAC,6BAA6B,CAAC;QACpC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,oBAAoB,CAAC;MAC3C,CAAC,CAAC;IACV;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}